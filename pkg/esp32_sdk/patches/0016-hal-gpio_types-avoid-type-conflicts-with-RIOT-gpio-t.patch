From 9220ae3c3d5bf30804f6741c43b753317d3486ef Mon Sep 17 00:00:00 2001
From: Gunar Schorcht <gunar@schorcht.net>
Date: Sat, 1 Mar 2025 18:04:05 +0100
Subject: [PATCH 16/27] hal/gpio_types: avoid type conflicts with RIOT gpio
 types

---
 components/hal/include/hal/gpio_types.h | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/components/hal/include/hal/gpio_types.h b/components/hal/include/hal/gpio_types.h
index d785ec491a..1a60a4181c 100644
--- a/components/hal/include/hal/gpio_types.h
+++ b/components/hal/include/hal/gpio_types.h
@@ -14,10 +14,12 @@
 extern "C" {
 #endif
 
+#ifndef HAVE_GPIO_PORT_T
 typedef enum {
     GPIO_PORT_0 = 0,
     GPIO_PORT_MAX,
 } gpio_port_t;
+#endif
 
 #define GPIO_PIN_REG_0          IO_MUX_GPIO0_REG
 #define GPIO_PIN_REG_1          IO_MUX_GPIO1_REG
@@ -92,6 +94,7 @@ typedef enum {
 #define GPIO_MODE_DEF_OD              (BIT2)    ///< bit mask for OD mode
 /** @endcond */
 
+#ifndef HAVE_GPIO_MODE_T
 typedef enum {
     GPIO_MODE_DISABLE = GPIO_MODE_DEF_DISABLE,                                                         /*!< GPIO mode : disable input and output             */
     GPIO_MODE_INPUT = GPIO_MODE_DEF_INPUT,                                                             /*!< GPIO mode : input only                           */
@@ -100,6 +103,7 @@ typedef enum {
     GPIO_MODE_INPUT_OUTPUT_OD = ((GPIO_MODE_DEF_INPUT) | (GPIO_MODE_DEF_OUTPUT) | (GPIO_MODE_DEF_OD)), /*!< GPIO mode : output and input with open-drain mode*/
     GPIO_MODE_INPUT_OUTPUT = ((GPIO_MODE_DEF_INPUT) | (GPIO_MODE_DEF_OUTPUT)),                         /*!< GPIO mode : output and input mode                */
 } gpio_mode_t;
+#endif
 
 typedef enum {
     GPIO_PULLUP_DISABLE = 0x0,     /*!< Disable GPIO pull-up resistor */
@@ -111,12 +115,14 @@ typedef enum {
     GPIO_PULLDOWN_ENABLE = 0x1,    /*!< Enable GPIO pull-down resistor  */
 } gpio_pulldown_t;
 
+#ifndef HAVE_GPIO_PULL_T
 typedef enum {
     GPIO_PULLUP_ONLY,               /*!< Pad pull up            */
     GPIO_PULLDOWN_ONLY,             /*!< Pad pull down          */
     GPIO_PULLUP_PULLDOWN,           /*!< Pad pull up + pull down*/
     GPIO_FLOATING,                  /*!< Pad floating           */
 } gpio_pull_mode_t;
+#endif
 
 typedef enum {
     GPIO_DRIVE_CAP_0       = 0,    /*!< Pad drive capability: weak          */
-- 
2.34.1

